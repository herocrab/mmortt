[gd_resource type="VisualShader" load_steps=6 format=3 uid="uid://s6tsvr7a28le"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_8ejvo"]
source = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_6lqah"]
parameter_name = "opacity"

[sub_resource type="VisualShaderNodeVectorDecompose" id="VisualShaderNodeVectorDecompose_8ejvo"]
default_input_values = [0, Quaternion(0, 0, 0, 0)]
op_type = 2

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_6lqah"]

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_7heuv"]
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform float opacity;



void fragment() {
	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(TEXTURE, UV);


// VectorDecompose:4
	float n_out4p0 = n_out2p0.x;
	float n_out4p1 = n_out2p0.y;
	float n_out4p2 = n_out2p0.z;
	float n_out4p3 = n_out2p0.w;


// VectorCompose:5
	vec3 n_out5p0 = vec3(n_out4p0, n_out4p1, n_out4p2);


// FloatParameter:3
	float n_out3p0 = opacity;


// FloatOp:6
	float n_out6p0 = n_out4p3 * n_out3p0;


// Output:0
	COLOR.rgb = n_out5p0;
	COLOR.a = n_out6p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(820, 140)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_8ejvo")
nodes/fragment/2/position = Vector2(-200, 140)
nodes/fragment/3/node = SubResource("VisualShaderNodeFloatParameter_6lqah")
nodes/fragment/3/position = Vector2(20, 400)
nodes/fragment/4/node = SubResource("VisualShaderNodeVectorDecompose_8ejvo")
nodes/fragment/4/position = Vector2(140, 120)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorCompose_6lqah")
nodes/fragment/5/position = Vector2(360, 120)
nodes/fragment/6/node = SubResource("VisualShaderNodeFloatOp_7heuv")
nodes/fragment/6/position = Vector2(580, 280)
nodes/fragment/connections = PackedInt32Array(2, 0, 4, 0, 5, 0, 0, 0, 4, 0, 5, 0, 4, 1, 5, 1, 4, 2, 5, 2, 3, 0, 6, 1, 4, 3, 6, 0, 6, 0, 0, 1)
